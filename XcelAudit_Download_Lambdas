var AWS = require('aws-sdk');
var lambda = new AWS.Lambda();
const axios = require('axios');
var s3 = new AWS.S3();

exports.handler = async(event) => {
    if (event.command == "FUNCTIONS") {
        var params = {
            FunctionVersion: "ALL",
            MaxItems: 50
        };
        let response = await lambda.listFunctions(params).promise();
        if (response.Functions.length > 0) {
            let date = new Date().toISOString().split('T')[0].split("-");
            let readableDate = date[2] + "-" + date[1] + "-" + date[0];
            for (let i = 0; i < response.Functions.length; i++) {
                if (response.Functions[i].FunctionName != "XcelAudit_Download_Lambdas") {
                    var get_params = {
                        FunctionName: response.Functions[i].FunctionName
                    };
                    let function_response = await lambda.getFunction(get_params).promise();
                    const res = await axios.get(function_response.Code.Location, { responseType: 'arraybuffer' });
                    let s3_params = {
                        Bucket: 'xcel-audit-documents',
                        Key: `lambdas/${readableDate}__${Math.floor(new Date().getTime()/10000)}/Functions/${function_response.Configuration.FunctionName}.zip`,
                        Body: res.data,
                        ACL: 'public-read',
                        ContentType: 'application/zip',
                    };
                    await s3.upload(s3_params).promise();
                }
            }
        }
    }
    else if (event.command == "LAYERS") {
        var list_layers_params = {
            CompatibleRuntime: "nodejs12.x"
        };
        let layers = await lambda.listLayers(list_layers_params).promise();
        layers = layers.Layers;
        for (let i = 0; i < layers.length; i++) {
            var get_layer_params = {
                Arn: layers[i].LatestMatchingVersion.LayerVersionArn
            };
            let layer_response = await lambda.getLayerVersionByArn(get_layer_params).promise();
            const res = await axios.get(layer_response.Content.Location, { responseType: 'arraybuffer' });
            let date = new Date().toISOString().split('T')[0].split("-");
            let readableDate = date[2] + "-" + date[1] + "-" + date[0];
            let s3_params = {
                Bucket: 'xcel-audit-documents',
                Key: `lambdas/${readableDate}__${Math.floor(new Date().getTime()  / 10000)}/Layers/${layer_response.LayerArn.split(":")[layer_response.LayerArn.split(":").length-1]}.zip`,
                Body: res.data,
                ACL: 'public-read',
                ContentType: 'application/zip',
            };
            await s3.upload(s3_params).promise();
        }
    }
    return `${event.command} Downloaded Successfully!!!`;
};
